# -*- coding: utf-8 -*-
"""Regresionlineal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UeVlVG7v6vl2GbsTEtWFRibB0S3hbmCj
"""

import pandas as pd
import numpy as np
from sklearn import linear_model
from sklearn.metrics import r2_score
from sklearn.model_selection import train_test_split

datos=pd.read_csv('movies.csv', sep=',')

df = pd.DataFrame(datos) #Elaboracion del dataframe

x=df['movie_facebook_likes'] #La variable explicativa del modelo
y=df['imdb_score'] #La variable objetivo del modelo

X=np.array(x)
Y=np.array(y)

X_train, X_test, y_train, y_test = train_test_split(X,Y,test_size=0.30, random_state=1) #Separacion datos de entrenamiento/Evaluacion
print(X_train.shape)
print(X_test.shape)

regr=linear_model.LinearRegression()
print(regr.fit(X_train.reshape(-1,1),y_train.reshape(-1,1))) #se envian los datos de prueba 80%
print(regr.coef_)
m=(regr.coef_[0])
b=regr.intercept_
y_p=m*X+b
print('y={0}*x+{1}'.format(m,b))
print('El valor de r2 es: ' ,r2_score(y,y_p))

print(regr.predict(X_test.reshape(-1,1))) #Los valores predecidos por el modelo

print(y_test)

import matplotlib.pyplot as plt

import matplotlib.pyplot as plt
plt.scatter(x,y,color='red')
plt.plot(x,y_p,color='blue')
plt.title('Regresion lineal', fontsize=16)
plt.xlabel('Likes Facebook', fontsize=13)
plt.ylabel('Calificacion IMDB', fontsize=13)